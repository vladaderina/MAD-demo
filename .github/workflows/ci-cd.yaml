name: CI/CD Pipeline
on:
  push:
    branches:
      - main
      - pipeline 
      - monitoring
      - storage
    paths:
      - '.github/workflows/ci-cd.yaml'
      - 'helm/**'
      - '!helm/product/tags.yaml'
      - 'src/**'

jobs:
  build:
    runs-on: self-hosted
    environment: minikube
    permissions:
      contents: write
    env: 
      DOCKER_HUB_USERNAME: ${{ vars.DOCKER_HUB_USERNAME }} 
      DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
    steps:        
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
          ref: ${{ github.ref_name }}

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v40
  
      - name: Get changed services
        id: changed-services
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            dir=$(echo "$file" | awk -F'/' '{print $2}' | sort -u)
            if [ -d "src/$dir" ]; then
              echo "services=$dir" >> $GITHUB_OUTPUT
            fi
          done

      - name: Build and push Docker images
        run: |
          for service in ${{ steps.changed-services.outputs.services }}; do
            if [ -d "src/$service" ]; then
              docker build -t ${{ env.DOCKER_HUB_USERNAME }}/$service:$GITHUB_SHA ./src/$service
              docker login -u ${{ env.DOCKER_HUB_USERNAME }} -p ${{ env.DOCKER_HUB_TOKEN }}
              docker push ${{ env.DOCKER_HUB_USERNAME }}/$service:$GITHUB_SHA
            fi
          done

      - name: Tags overrides
        run: |
          for service in ${{ steps.changed-services.outputs.services }}; do
            if [ -d "src/$service" ]; then
              yq -i ".${service}.tag = \"${GITHUB_SHA}\"" ./helm/product/tags.yaml
            fi
          done

      - name: Check for changes
        id: check_changes
        run: |
          git diff --quiet || echo "changes=true" >> $GITHUB_ENV

      - name: Commit and push changes
        if: env.changes == 'true'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          git add .
          git commit -m "Update tags.yaml" || echo "No changes to commit"
          git push

  deploy:
    runs-on: self-hosted
    needs: build
    steps:
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            product:
              - 'helm/product/**'
              - 'src/**'
            monitoring:
              - 'helm/monitoring/**'
            srotage:
              - 'helm/storage/**'
      - name: Deploy Product to Kubernetes
        if: steps.changes.outputs.product == 'true'
        run: |
          helm upgrade --values ./helm/product/tags.yaml --kubeconfig ~/.kube/kubeconfig-github --atomic --timeout 5m -n product product ./helm/product
      - name: Deploy Monitoring to Kubernetes
        if: steps.changes.outputs.monitoring == 'true'
        run: |
          helm dependency build ./helm/monitoring
          helm upgrade --kubeconfig ~/.kube/kubeconfig-github --atomic --timeout 5m -n monitoring --set stack.grafana.dbPass="grafana" monitoring ./helm/monitoring
      - name: Deploy Storage to Kubernetes
        if: steps.changes.outputs.srotage == 'true'
        run: |
          helm dependency build ./helm/storage
          helm upgrade --kubeconfig ~/.kube/kubeconfig-github --atomic --timeout 5m -n storage postgres ./helm/storage 